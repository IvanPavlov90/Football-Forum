@using EPAM.FootballForum.Common.Entities;
@using EPAM.FootballForum.Common.Dependencies;
@{
    Layout = "~/Layouts/_BasicLayout.cshtml";
    Page.Title = "Форум. Основная страница.";
    IEnumerable<Topic> topics = DependencyResolver.Instance.TopicBLL.GetAllTopics();
    string text = Request["text"];
    if (IsPost)
    {
        User user = DependencyResolver.Instance.UserBLL.GetUser(User.Identity.Name);
        Topic newTopic = new Topic(user.ID, text, DateTime.Now, DateTime.Now);
        DependencyResolver.Instance.TopicBLL.AddTopic(newTopic);
    }
}

<section class="main-content flex-column flex-row" id="content">
    <div class="main-content__center flex-column flex-start">
        @if (User.Identity.IsAuthenticated)
        {
            <button class="add-btn" id="add_topic_btn">Добавить тему</button>
        }
        else
        {
            <button class="add-btn invisible">Добавить тему</button>
        }
        <div class="test flex-column flex-row">
            <div class="topic-block topic-text">
                <p>Название темы</p>
            </div>
            <div class="topic-block topic-info">
                <p>Сообщения</p>
            </div>
            <div class="topic-block topic-info">
                <p>Автор</p>
            </div>
            <div class="topic-block topic-info">
                <p>Дата обновления</p>
            </div>
        </div>
        @foreach (var item in topics)
        {
            <div class="test flex-column flex-row">
                <div class="topic-block topic-text">
                    <p class="topic-name" id="@item.ID">@item.Text</p>
                </div>
                <div class="topic-block topic-info">
                    <p>12</p>
                </div>
                <div class="topic-block topic-info">
                    <p>@item.Author</p>
                </div>
                <div class="topic-block topic-info">
                    <p>@item.UpdatedAt</p>
                </div>
            </div>
        }
        @if (User.Identity.IsAuthenticated)
        {
            <form class="add-topic-form flex-column invisible" method="post" id="add_topic_form">
                <p>Введите название темы:</p>
                <textarea class="add-topic-form__textarea" rows="5" name="text" id="textarea">

                </textarea>
                <input type="submit" value="Отправить" class="add-topic-form add-topic-form__btn">
            </form>
            <div id="errorBox">

            </div>
        }
    </div>
</section>

<script type="text/javascript">
    let addTopicForm = document.getElementById('add_topic_form');
    let addTopicBtn = document.getElementById('add_topic_btn');
    addTopicBtn.addEventListener("click", () => {
        addTopicForm.classList.toggle('invisible');
        errorBox.classList.toggle('invisible');
    });

    let topicNames = document.getElementsByClassName('topic-name');
    for (var i = 0; i < topicNames.length; i++) {
        topicNames[i].addEventListener("click", (event) => {
            document.location.href = "Pages/TopicPage.cshtml?id=" + event.target.id;
        });
    };

    addTopicForm.addEventListener("submit", (event) => {
        if (!checkValidity()) {
            event.preventDefault();
        }
    });

    function checkValidity() {
        const textRegex = /^[^\s]/g;
        let textArea = document.getElementById('textarea');

        if (!textRegex.test(textArea.value)) {
            showError(errorBox, "Пожалуйста, не начинайте свое сообщение с пробелов.");
            return false;
        }
        return true;
    }

    function showError(elem, message) {
        elem.innerHTML = "";
        let errorDiv = document.createElement('div');
        elem.append(errorDiv);
        elem.className = "error-div_topic";
        elem.innerHTML = message;
    }
</script>